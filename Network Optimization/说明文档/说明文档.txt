实现了一个贪心算法来解决网络流调度问题。
其中，网络由多个端口和多个流组成，每个端口具有固定带宽，每个流具有一定的带宽需求和进入时间。
目标是将每个流分配到一个空闲的出端口，并在该端口上尽可能快地发送该流。该算法的主要步骤如下：

1、读取端口文件和流文件，将端口的id和带宽存储在字典ports中，将流的id、带宽、进入时间和发送时间存储在字典flows中。

2、按照流的进入时间对flows字典进行排序，以确保按顺序处理每个流。

3、初始化每个端口的状态，包括是否空闲、当前已发送流的带宽和结束时间等信息。

4、对于每个流，选择一个空闲的出端口并计算该流在该端口的发送时间。具体地，首先遍历所有端口，找到一个空闲的端口，计算该流在该端口上的发送时间。如果该端口可以在该时间段内发送该流，则选择该端口。如果没有空闲的出端口，则选择一个最早结束的出端口。在选择的出端口上发送该流，并更新端口状态。

5、将每个流的id、所选出端口的id和开始发送时间存储在一个结果列表中，并将该列表写入结果文件中。