实现网络流分配问题的线性规划模型，代码说明如下：

1、read_port_file(filename)
    该函数用于读取端口文件，将端口的id和带宽存储在字典ports中，并返回ports字典。首先，该函数打开文件filename，读取文件中每一行（除第一行外），
    使用map函数将端口id和带宽转换为整数类型，然后将它们存储在ports字典中，并返回ports字典

2、read_flow_file(filename)
    该函数用于读取流文件，将流的id、带宽、进入时间和发送时间存储在字典flows中，并返回flows字典。首先，该函数打开文件filename，读取文件中每一行（除第一行外），
    使用map函数将流的id、带宽、进入时间和发送时间转换为整数类型，然后将它们存储在flows字典中，并返回flows字典

3、linear_programming(ports, flows)
    该函数用于创建线性规划模型，求解模型并返回结果。首先，该函数创建一个线性规划模型，并定义两个变量字典ports_vars和flows_vars，
    用于存储每个端口的带宽使用量和每个流分配到的端口。对于每个端口，创建一个整数变量，对于每个流和每个端口，创建一个二进制变量。
    然后，该函数添加约束条件，分别限制每个端口的带宽使用量不得超过其总带宽和每个流只能分配到一个端口，并且流进入时间不得早于分配到的端口的发送时间。
    最后，该函数将所有端口的带宽使用量相加，作为目标函数，并求解线性规划模型。该函数获取每个流分配到的端口、开始发送时间和剩余可用带宽，并将结果存储在result列表中，排序后返回result列表

